{"version":3,"sources":["webpack://rcb-website/./node_modules/ccount/index.js","webpack://rcb-website/./node_modules/markdown-table/index.js","webpack://rcb-website/./node_modules/mdast-util-find-and-replace/index.js","webpack://rcb-website/./node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","webpack://rcb-website/./node_modules/mdast-util-gfm-autolink-literal/from-markdown.js","webpack://rcb-website/./node_modules/mdast-util-gfm-autolink-literal/to-markdown.js","webpack://rcb-website/./node_modules/mdast-util-gfm-strikethrough/from-markdown.js","webpack://rcb-website/./node_modules/mdast-util-gfm-strikethrough/to-markdown.js","webpack://rcb-website/./node_modules/mdast-util-gfm-table/from-markdown.js","webpack://rcb-website/./node_modules/mdast-util-gfm-table/to-markdown.js","webpack://rcb-website/./node_modules/mdast-util-gfm-task-list-item/from-markdown.js","webpack://rcb-website/./node_modules/mdast-util-gfm-task-list-item/to-markdown.js","webpack://rcb-website/./node_modules/mdast-util-gfm/from-markdown.js","webpack://rcb-website/./node_modules/mdast-util-gfm/to-markdown.js","webpack://rcb-website/./node_modules/mdast-util-to-markdown/lib/configure.js","webpack://rcb-website/./node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","webpack://rcb-website/./node_modules/mdast-util-to-markdown/lib/handle/list-item.js","webpack://rcb-website/./node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","webpack://rcb-website/./node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","webpack://rcb-website/./node_modules/mdast-util-to-markdown/lib/util/container-flow.js","webpack://rcb-website/./node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","webpack://rcb-website/./node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","webpack://rcb-website/./node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js","webpack://rcb-website/./node_modules/micromark-extension-gfm-autolink-literal/index.js","webpack://rcb-website/./node_modules/micromark-extension-gfm-autolink-literal/syntax.js","webpack://rcb-website/./node_modules/micromark-extension-gfm-strikethrough/index.js","webpack://rcb-website/./node_modules/micromark-extension-gfm-table/index.js","webpack://rcb-website/./node_modules/micromark-extension-gfm-table/syntax.js","webpack://rcb-website/./node_modules/micromark-extension-gfm-task-list-item/index.js","webpack://rcb-website/./node_modules/micromark-extension-gfm-task-list-item/syntax.js","webpack://rcb-website/./node_modules/micromark-extension-gfm/index.js","webpack://rcb-website/./node_modules/micromark-extension-gfm/syntax.js","webpack://rcb-website/./node_modules/remark-gfm/index.js","webpack://rcb-website/./node_modules/repeat-string/index.js"],"names":["module","exports","source","character","index","value","String","count","Error","indexOf","length","repeat","table","options","cells","columnIndex","columnLength","largest","size","cell","lines","line","before","after","code","settings","padding","start","delimiterStart","end","delimiterEnd","align","concat","alignDelimiters","alignments","stringLength","defaultStringLength","rowIndex","rowLength","cellMatrix","sizeMatrix","row","sizes","longestCellByColumn","mostCellsPerRow","undefined","push","toAlignment","colon","r","Math","max","splice","space","join","replace","trailingWhitespace","charCodeAt","tree","find","schema","exec","search","handlerFactory","pairs","pair","handler","node","parent","position","match","subhandler","nodes","children","lastIndex","apply","input","type","slice","global","unshift","key","result","toExpression","toFunction","toPairs","visit","convert","escape","ignored","ignore","parents","grandparent","RegExp","string","TypeError","ccount","findAndReplace","unicodePunctuation","unicodeWhitespace","enterLiteralAutolinkValue","token","this","config","enter","autolinkProtocol","call","findUrl","$0","protocol","domain","path","parts","prefix","previous","test","split","isCorrectDomain","url","closingParenIndex","openingParens","closingParens","trail","splitUrl","title","findEmail","atext","label","email","transforms","literalAutolink","literalAutolinkEmail","literalAutolinkHttp","literalAutolinkWww","exit","autolinkEmail","data","stack","sliceSerialize","inConstruct","notInConstruct","unsafe","canContainEols","strikethrough","phrasing","handleDelete","_","context","handlers","delete","peek","enterCell","$1","_align","setData","tableData","tableHeader","tableRow","codeText","resume","getData","defaultInlineCode","markdownTable","tableCellPadding","tablePipeAlign","around","atBreak","serializeData","subexit","handleTableRowAsData","handleTableAsData","tableCell","handleTableCell","inlineCode","matrix","exitCheck","checked","taskListCheckValueChecked","taskListCheckValueUnchecked","paragraph","firstParaghraph","siblings","head","shift","column","offset","Object","assign","defaultListItem","listItem","autolinkLiteral","taskListItem","own","hasOwnProperty","extension","left","right","extensions","configure","base","patternCompile","pattern","expression","sequence","charAt","bullet","checkBullet","listItemIndent","checkListItemIndent","ordered","incrementListMarker","spread","ceil","indentLines","flow","blank","marker","style","child","results","handle","between","Number","safeOptions","map","eol","one","_compiled","asciiAlpha","asciiAlphanumeric","asciiControl","markdownLineEnding","www","tokenize","effects","ok","nok","consume","w2","w3","dot","partial","hasUnderscoreInLastSegment","hasUnderscoreInLastLastSegment","check","namedCharacterReference","done","punctuationContinuation","punctuation","balance","inPath","continuedPunctuation","parenAtPathEnd","pathEnd","trailingPunctuation","inside","wwwAutolink","self","previousWww","events","attempt","httpAutolink","previousHttp","t1","t2","p","s","slash1","slash2","emailAutolink","hasDot","gfmAtext","previousEmail","dotContinuation","dashOrUnderscoreContinuation","afterDashOrUnderscore","text","_balanced","single","singleTilde","tokenizer","more","classifyCharacter","_open","_close","resolveAll","open","nextEvents","shallow","chunkedSplice","parser","constructs","insideSpan","null","removeRemainingSequences","seenDelimiter","hasDash","tableHeaderCount","cellDividerHead","inCellContentHead","cellBreakHead","setextUnderlineMini","createSpace","rowStartDelimiter","atRowEndHead","inWhitespaceHead","inCellContentEscapeHead","atDelimiterRowBreak","rowEndDelimiter","inWhitespaceDelimiter","inFillerDelimiter","afterLeftAlignment","afterRightAlignment","tableClose","nextPrefixedOrBlank","tableContinue","bodyStart","rowStartBody","cellDividerBody","inCellContentBody","cellBreakBody","tableBodyClose","tableBodyContinue","atRowEndBody","inWhitespaceBody","inCellContentEscapeBody","resolve","inHead","inDelimiterRow","inRow","content","contentStart","contentEnd","cellStart","contentType","interruptible","whitespace","markdownLineEndingOrSpace","spaceFactory","prefixSize","tasklistCheck","_gfmTasklistFirstContentOfListItem","close","spaceThenNonSpace","combine","autolink","tasklist","warningIssued","syntax","fromMarkdown","toMarkdown","Parser","prototype","blockTokenizers","Compiler","visitors","console","warn","add","field","cache","res","str","num","substr"],"mappings":"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","file":"eec37c5b22d73a7119d2ab267cc5cf31a6d79d53-77f0a28e91ca001b96ac.js","sourcesContent":["'use strict';\n\nmodule.exports = ccount;\n\nfunction ccount(source, character) {\n  var value = String(source);\n  var count = 0;\n  var index;\n\n  if (typeof character !== 'string') {\n    throw new Error('Expected character');\n  }\n\n  index = value.indexOf(character);\n\n  while (index !== -1) {\n    count++;\n    index = value.indexOf(character, index + character.length);\n  }\n\n  return count;\n}","'use strict';\n\nvar repeat = require('repeat-string');\n\nmodule.exports = markdownTable;\nvar trailingWhitespace = / +$/; // Characters.\n\nvar space = ' ';\nvar lineFeed = '\\n';\nvar dash = '-';\nvar colon = ':';\nvar verticalBar = '|';\nvar x = 0;\nvar C = 67;\nvar L = 76;\nvar R = 82;\nvar c = 99;\nvar l = 108;\nvar r = 114; // Create a table from a matrix of strings.\n\nfunction markdownTable(table, options) {\n  var settings = options || {};\n  var padding = settings.padding !== false;\n  var start = settings.delimiterStart !== false;\n  var end = settings.delimiterEnd !== false;\n  var align = (settings.align || []).concat();\n  var alignDelimiters = settings.alignDelimiters !== false;\n  var alignments = [];\n  var stringLength = settings.stringLength || defaultStringLength;\n  var rowIndex = -1;\n  var rowLength = table.length;\n  var cellMatrix = [];\n  var sizeMatrix = [];\n  var row = [];\n  var sizes = [];\n  var longestCellByColumn = [];\n  var mostCellsPerRow = 0;\n  var cells;\n  var columnIndex;\n  var columnLength;\n  var largest;\n  var size;\n  var cell;\n  var lines;\n  var line;\n  var before;\n  var after;\n  var code; // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n\n  while (++rowIndex < rowLength) {\n    cells = table[rowIndex];\n    columnIndex = -1;\n    columnLength = cells.length;\n    row = [];\n    sizes = [];\n\n    if (columnLength > mostCellsPerRow) {\n      mostCellsPerRow = columnLength;\n    }\n\n    while (++columnIndex < columnLength) {\n      cell = serialize(cells[columnIndex]);\n\n      if (alignDelimiters === true) {\n        size = stringLength(cell);\n        sizes[columnIndex] = size;\n        largest = longestCellByColumn[columnIndex];\n\n        if (largest === undefined || size > largest) {\n          longestCellByColumn[columnIndex] = size;\n        }\n      }\n\n      row.push(cell);\n    }\n\n    cellMatrix[rowIndex] = row;\n    sizeMatrix[rowIndex] = sizes;\n  } // Figure out which alignments to use.\n\n\n  columnIndex = -1;\n  columnLength = mostCellsPerRow;\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < columnLength) {\n      alignments[columnIndex] = toAlignment(align[columnIndex]);\n    }\n  } else {\n    code = toAlignment(align);\n\n    while (++columnIndex < columnLength) {\n      alignments[columnIndex] = code;\n    }\n  } // Inject the alignment row.\n\n\n  columnIndex = -1;\n  columnLength = mostCellsPerRow;\n  row = [];\n  sizes = [];\n\n  while (++columnIndex < columnLength) {\n    code = alignments[columnIndex];\n    before = '';\n    after = '';\n\n    if (code === l) {\n      before = colon;\n    } else if (code === r) {\n      after = colon;\n    } else if (code === c) {\n      before = colon;\n      after = colon;\n    } // There *must* be at least one hyphen-minus in each alignment cell.\n\n\n    size = alignDelimiters ? Math.max(1, longestCellByColumn[columnIndex] - before.length - after.length) : 1;\n    cell = before + repeat(dash, size) + after;\n\n    if (alignDelimiters === true) {\n      size = before.length + size + after.length;\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size;\n      }\n\n      sizes[columnIndex] = size;\n    }\n\n    row[columnIndex] = cell;\n  } // Inject the alignment row.\n\n\n  cellMatrix.splice(1, 0, row);\n  sizeMatrix.splice(1, 0, sizes);\n  rowIndex = -1;\n  rowLength = cellMatrix.length;\n  lines = [];\n\n  while (++rowIndex < rowLength) {\n    row = cellMatrix[rowIndex];\n    sizes = sizeMatrix[rowIndex];\n    columnIndex = -1;\n    columnLength = mostCellsPerRow;\n    line = [];\n\n    while (++columnIndex < columnLength) {\n      cell = row[columnIndex] || '';\n      before = '';\n      after = '';\n\n      if (alignDelimiters === true) {\n        size = longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0);\n        code = alignments[columnIndex];\n\n        if (code === r) {\n          before = repeat(space, size);\n        } else if (code === c) {\n          if (size % 2 === 0) {\n            before = repeat(space, size / 2);\n            after = before;\n          } else {\n            before = repeat(space, size / 2 + 0.5);\n            after = repeat(space, size / 2 - 0.5);\n          }\n        } else {\n          after = repeat(space, size);\n        }\n      }\n\n      if (start === true && columnIndex === 0) {\n        line.push(verticalBar);\n      }\n\n      if (padding === true && // Don’t add the opening space if we’re not aligning and the cell is\n      // empty: there will be a closing space.\n      !(alignDelimiters === false && cell === '') && (start === true || columnIndex !== 0)) {\n        line.push(space);\n      }\n\n      if (alignDelimiters === true) {\n        line.push(before);\n      }\n\n      line.push(cell);\n\n      if (alignDelimiters === true) {\n        line.push(after);\n      }\n\n      if (padding === true) {\n        line.push(space);\n      }\n\n      if (end === true || columnIndex !== columnLength - 1) {\n        line.push(verticalBar);\n      }\n    }\n\n    line = line.join('');\n\n    if (end === false) {\n      line = line.replace(trailingWhitespace, '');\n    }\n\n    lines.push(line);\n  }\n\n  return lines.join(lineFeed);\n}\n\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value);\n}\n\nfunction defaultStringLength(value) {\n  return value.length;\n}\n\nfunction toAlignment(value) {\n  var code = typeof value === 'string' ? value.charCodeAt(0) : x;\n  return code === L || code === l ? l : code === R || code === r ? r : code === C || code === c ? c : x;\n}","'use strict';\n\nmodule.exports = findAndReplace;\n\nvar visit = require('unist-util-visit-parents');\n\nvar convert = require('unist-util-is/convert');\n\nvar escape = require('escape-string-regexp');\n\nvar splice = [].splice;\n\nfunction findAndReplace(tree, find, replace, options) {\n  var settings;\n  var schema;\n\n  if (typeof find === 'string' || find && typeof find.exec === 'function') {\n    schema = [[find, replace]];\n  } else {\n    schema = find;\n    options = replace;\n  }\n\n  settings = options || {};\n  search(tree, settings, handlerFactory(toPairs(schema)));\n  return tree;\n\n  function handlerFactory(pairs) {\n    var pair = pairs[0];\n    return handler;\n\n    function handler(node, parent) {\n      var find = pair[0];\n      var replace = pair[1];\n      var nodes = [];\n      var start = 0;\n      var index = parent.children.indexOf(node);\n      var position;\n      var match;\n      var subhandler;\n      var value;\n      find.lastIndex = 0;\n      match = find.exec(node.value);\n\n      while (match) {\n        position = match.index;\n        value = replace.apply(null, [].concat(match, {\n          index: match.index,\n          input: match.input\n        }));\n\n        if (value !== false) {\n          if (start !== position) {\n            nodes.push({\n              type: 'text',\n              value: node.value.slice(start, position)\n            });\n          }\n\n          if (typeof value === 'string' && value.length > 0) {\n            value = {\n              type: 'text',\n              value: value\n            };\n          }\n\n          if (value) {\n            nodes = [].concat(nodes, value);\n          }\n\n          start = position + match[0].length;\n        }\n\n        if (!find.global) {\n          break;\n        }\n\n        match = find.exec(node.value);\n      }\n\n      if (position === undefined) {\n        nodes = [node];\n        index--;\n      } else {\n        if (start < node.value.length) {\n          nodes.push({\n            type: 'text',\n            value: node.value.slice(start)\n          });\n        }\n\n        nodes.unshift(index, 1);\n        splice.apply(parent.children, nodes);\n      }\n\n      if (pairs.length > 1) {\n        subhandler = handlerFactory(pairs.slice(1));\n        position = -1;\n\n        while (++position < nodes.length) {\n          node = nodes[position];\n\n          if (node.type === 'text') {\n            subhandler(node, parent);\n          } else {\n            search(node, settings, subhandler);\n          }\n        }\n      }\n\n      return index + nodes.length + 1;\n    }\n  }\n}\n\nfunction search(tree, settings, handler) {\n  var ignored = convert(settings.ignore || []);\n  var result = [];\n  visit(tree, 'text', visitor);\n  return result;\n\n  function visitor(node, parents) {\n    var index = -1;\n    var parent;\n    var grandparent;\n\n    while (++index < parents.length) {\n      parent = parents[index];\n\n      if (ignored(parent, grandparent ? grandparent.children.indexOf(parent) : undefined, grandparent)) {\n        return;\n      }\n\n      grandparent = parent;\n    }\n\n    return handler(node, grandparent);\n  }\n}\n\nfunction toPairs(schema) {\n  var result = [];\n  var key;\n  var index;\n\n  if (typeof schema !== 'object') {\n    throw new Error('Expected array or object as schema');\n  }\n\n  if ('length' in schema) {\n    index = -1;\n\n    while (++index < schema.length) {\n      result.push([toExpression(schema[index][0]), toFunction(schema[index][1])]);\n    }\n  } else {\n    for (key in schema) {\n      result.push([toExpression(key), toFunction(schema[key])]);\n    }\n  }\n\n  return result;\n}\n\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find;\n}\n\nfunction toFunction(replace) {\n  return typeof replace === 'function' ? replace : returner;\n\n  function returner() {\n    return replace;\n  }\n}","'use strict';\n\nmodule.exports = function (string) {\n  if (typeof string !== 'string') {\n    throw new TypeError('Expected a string');\n  } // Escape characters with special meaning either inside or outside character sets.\n  // Use a simple backslash escape when it’s always valid, and a \\unnnn escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\n\n  return string.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&').replace(/-/g, '\\\\x2d');\n};","var ccount = require('ccount');\n\nvar findAndReplace = require('mdast-util-find-and-replace');\n\nvar unicodePunctuation = require('micromark/dist/character/unicode-punctuation');\n\nvar unicodeWhitespace = require('micromark/dist/character/unicode-whitespace');\n\nexports.transforms = [transformGfmAutolinkLiterals];\nexports.enter = {\n  literalAutolink: enterLiteralAutolink,\n  literalAutolinkEmail: enterLiteralAutolinkValue,\n  literalAutolinkHttp: enterLiteralAutolinkValue,\n  literalAutolinkWww: enterLiteralAutolinkValue\n};\nexports.exit = {\n  literalAutolink: exitLiteralAutolink,\n  literalAutolinkEmail: exitLiteralAutolinkEmail,\n  literalAutolinkHttp: exitLiteralAutolinkHttp,\n  literalAutolinkWww: exitLiteralAutolinkWww\n};\n\nfunction enterLiteralAutolink(token) {\n  this.enter({\n    type: 'link',\n    title: null,\n    url: '',\n    children: []\n  }, token);\n}\n\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token);\n}\n\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token);\n}\n\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token);\n  this.stack[this.stack.length - 1].url = 'http://' + this.sliceSerialize(token);\n}\n\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token);\n}\n\nfunction exitLiteralAutolink(token) {\n  this.exit(token);\n}\n\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(tree, [[/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/i, findUrl], [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/, findEmail]], {\n    ignore: ['link', 'linkReference']\n  });\n}\n\nfunction findUrl($0, protocol, domain, path, match) {\n  var prefix = '';\n  var parts;\n  var result; // Not an expected previous character.\n\n  if (!previous(match)) {\n    return false;\n  } // Treat `www` as part of the domain.\n\n\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain;\n    protocol = '';\n    prefix = 'http://';\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false;\n  }\n\n  parts = splitUrl(domain + path);\n  if (!parts[0]) return false;\n  result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{\n      type: 'text',\n      value: protocol + parts[0]\n    }]\n  };\n\n  if (parts[1]) {\n    result = [result, {\n      type: 'text',\n      value: parts[1]\n    }];\n  }\n\n  return result;\n}\n\nfunction findEmail($0, atext, label, match) {\n  // Not an expected previous character.\n  if (!previous(match, true) || /[_-]$/.test(label)) {\n    return false;\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{\n      type: 'text',\n      value: atext + '@' + label\n    }]\n  };\n}\n\nfunction isCorrectDomain(domain) {\n  var parts = domain.split('.');\n\n  if (parts.length < 2 || parts[parts.length - 1] && (/_/.test(parts[parts.length - 1]) || !/[a-zA-Z\\d]/.test(parts[parts.length - 1])) || parts[parts.length - 2] && (/_/.test(parts[parts.length - 2]) || !/[a-zA-Z\\d]/.test(parts[parts.length - 2]))) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction splitUrl(url) {\n  var trail = /[!\"&'),.:;<>?\\]}]+$/.exec(url);\n  var closingParenIndex;\n  var openingParens;\n  var closingParens;\n\n  if (trail) {\n    url = url.slice(0, trail.index);\n    trail = trail[0];\n    closingParenIndex = trail.indexOf(')');\n    openingParens = ccount(url, '(');\n    closingParens = ccount(url, ')');\n\n    while (closingParenIndex !== -1 && openingParens > closingParens) {\n      url += trail.slice(0, closingParenIndex + 1);\n      trail = trail.slice(closingParenIndex + 1);\n      closingParenIndex = trail.indexOf(')');\n      closingParens++;\n    }\n  }\n\n  return [url, trail];\n}\n\nfunction previous(match, email) {\n  var code = match.input.charCodeAt(match.index - 1);\n  return (code !== code || unicodeWhitespace(code) || unicodePunctuation(code)) && (!email || code !== 47);\n}","var inConstruct = 'phrasing';\nvar notInConstruct = ['autolink', 'link', 'image', 'label'];\nexports.unsafe = [{\n  character: '@',\n  before: '[+\\\\-.\\\\w]',\n  after: '[\\\\-.\\\\w]',\n  inConstruct: inConstruct,\n  notInConstruct: notInConstruct\n}, {\n  character: '.',\n  before: '[Ww]',\n  after: '[\\\\-.\\\\w]',\n  inConstruct: inConstruct,\n  notInConstruct: notInConstruct\n}, {\n  character: ':',\n  before: '[ps]',\n  after: '\\\\/',\n  inConstruct: inConstruct,\n  notInConstruct: notInConstruct\n}];","exports.canContainEols = ['delete'];\nexports.enter = {\n  strikethrough: enterStrikethrough\n};\nexports.exit = {\n  strikethrough: exitStrikethrough\n};\n\nfunction enterStrikethrough(token) {\n  this.enter({\n    type: 'delete',\n    children: []\n  }, token);\n}\n\nfunction exitStrikethrough(token) {\n  this.exit(token);\n}","var phrasing = require('mdast-util-to-markdown/lib/util/container-phrasing');\n\nexports.unsafe = [{\n  character: '~',\n  inConstruct: 'phrasing'\n}];\nexports.handlers = {\n  delete: handleDelete\n};\nhandleDelete.peek = peekDelete;\n\nfunction handleDelete(node, _, context) {\n  var exit = context.enter('emphasis');\n  var value = phrasing(node, context, {\n    before: '~',\n    after: '~'\n  });\n  exit();\n  return '~~' + value + '~~';\n}\n\nfunction peekDelete() {\n  return '~';\n}","exports.enter = {\n  table: enterTable,\n  tableData: enterCell,\n  tableHeader: enterCell,\n  tableRow: enterRow\n};\nexports.exit = {\n  codeText: exitCodeText,\n  table: exitTable,\n  tableData: exit,\n  tableHeader: exit,\n  tableRow: exit\n};\n\nfunction enterTable(token) {\n  this.enter({\n    type: 'table',\n    align: token._align,\n    children: []\n  }, token);\n  this.setData('inTable', true);\n}\n\nfunction exitTable(token) {\n  this.exit(token);\n  this.setData('inTable');\n}\n\nfunction enterRow(token) {\n  this.enter({\n    type: 'tableRow',\n    children: []\n  }, token);\n}\n\nfunction exit(token) {\n  this.exit(token);\n}\n\nfunction enterCell(token) {\n  this.enter({\n    type: 'tableCell',\n    children: []\n  }, token);\n} // Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n\n\nfunction exitCodeText(token) {\n  var value = this.resume();\n\n  if (this.getData('inTable')) {\n    value = value.replace(/\\\\([\\\\|])/g, replace);\n  }\n\n  this.stack[this.stack.length - 1].value = value;\n  this.exit(token);\n}\n\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0;\n}","var phrasing = require('mdast-util-to-markdown/lib/util/container-phrasing');\n\nvar defaultInlineCode = require('mdast-util-to-markdown/lib/handle/inline-code');\n\nvar markdownTable = require('markdown-table');\n\nmodule.exports = toMarkdown;\n\nfunction toMarkdown(options) {\n  var settings = options || {};\n  var padding = settings.tableCellPadding;\n  var alignDelimiters = settings.tablePipeAlign;\n  var stringLength = settings.stringLength;\n  var around = padding ? ' ' : '|';\n  return {\n    unsafe: [{\n      character: '\\r',\n      inConstruct: 'tableCell'\n    }, {\n      character: '\\n',\n      inConstruct: 'tableCell'\n    }, // A pipe, when followed by a tab or space (padding), or a dash or colon\n    // (unpadded delimiter row), could result in a table.\n    {\n      atBreak: true,\n      character: '|',\n      after: '[\\t :-]'\n    }, // A pipe in a cell must be encoded.\n    {\n      character: '|',\n      inConstruct: 'tableCell'\n    }, // A colon must be followed by a dash, in which case it could start a\n    // delimiter row.\n    {\n      atBreak: true,\n      character: ':',\n      after: '-'\n    }, // A delimiter row can also start with a dash, when followed by more\n    // dashes, a colon, or a pipe.\n    // This is a stricter version than the built in check for lists, thematic\n    // breaks, and setex heading underlines though:\n    // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n    {\n      atBreak: true,\n      character: '-',\n      after: '[:|-]'\n    }],\n    handlers: {\n      table: handleTable,\n      tableRow: handleTableRow,\n      tableCell: handleTableCell,\n      inlineCode: inlineCodeWithTable\n    }\n  };\n\n  function handleTable(node, _, context) {\n    return serializeData(handleTableAsData(node, context), node.align);\n  } // This function isn’t really used normally, because we handle rows at the\n  // table level.\n  // But, if someone passes in a table row, this ensures we make somewhat sense.\n\n\n  function handleTableRow(node, _, context) {\n    var row = handleTableRowAsData(node, context); // `markdown-table` will always add an align row\n\n    var value = serializeData([row]);\n    return value.slice(0, value.indexOf('\\n'));\n  }\n\n  function handleTableCell(node, _, context) {\n    var exit = context.enter('tableCell');\n    var value = phrasing(node, context, {\n      before: around,\n      after: around\n    });\n    exit();\n    return value;\n  }\n\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align: align,\n      alignDelimiters: alignDelimiters,\n      padding: padding,\n      stringLength: stringLength\n    });\n  }\n\n  function handleTableAsData(node, context) {\n    var children = node.children;\n    var index = -1;\n    var length = children.length;\n    var result = [];\n    var subexit = context.enter('table');\n\n    while (++index < length) {\n      result[index] = handleTableRowAsData(children[index], context);\n    }\n\n    subexit();\n    return result;\n  }\n\n  function handleTableRowAsData(node, context) {\n    var children = node.children;\n    var index = -1;\n    var length = children.length;\n    var result = [];\n    var subexit = context.enter('tableRow');\n\n    while (++index < length) {\n      result[index] = handleTableCell(children[index], node, context);\n    }\n\n    subexit();\n    return result;\n  }\n\n  function inlineCodeWithTable(node, parent, context) {\n    var value = defaultInlineCode(node, parent, context);\n\n    if (context.stack.indexOf('tableCell') !== -1) {\n      value = value.replace(/\\|/g, '\\\\$&');\n    }\n\n    return value;\n  }\n}","exports.exit = {\n  taskListCheckValueChecked: exitCheck,\n  taskListCheckValueUnchecked: exitCheck,\n  paragraph: exitParagraphWithTaskListItem\n};\n\nfunction exitCheck(token) {\n  // We’re always in a paragraph, in a list item.\n  this.stack[this.stack.length - 2].checked = token.type === 'taskListCheckValueChecked';\n}\n\nfunction exitParagraphWithTaskListItem(token) {\n  var parent = this.stack[this.stack.length - 2];\n  var node = this.stack[this.stack.length - 1];\n  var siblings = parent.children;\n  var head = node.children[0];\n  var index = -1;\n  var firstParaghraph;\n\n  if (parent && parent.type === 'listItem' && typeof parent.checked === 'boolean' && head && head.type === 'text') {\n    while (++index < siblings.length) {\n      if (siblings[index].type === 'paragraph') {\n        firstParaghraph = siblings[index];\n        break;\n      }\n    }\n\n    if (firstParaghraph === node) {\n      // Must start with a space or a tab.\n      head.value = head.value.slice(1);\n\n      if (head.value.length === 0) {\n        node.children.shift();\n      } else {\n        head.position.start.column++;\n        head.position.start.offset++;\n        node.position.start = Object.assign({}, head.position.start);\n      }\n    }\n  }\n\n  this.exit(token);\n}","var defaultListItem = require('mdast-util-to-markdown/lib/handle/list-item');\n\nexports.unsafe = [{\n  atBreak: true,\n  character: '-',\n  after: '[:|-]'\n}];\nexports.handlers = {\n  listItem: listItemWithTaskListItem\n};\n\nfunction listItemWithTaskListItem(node, parent, context) {\n  var value = defaultListItem(node, parent, context);\n  var head = node.children[0];\n\n  if (typeof node.checked === 'boolean' && head && head.type === 'paragraph') {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check);\n  }\n\n  return value;\n\n  function check($0) {\n    return $0 + '[' + (node.checked ? 'x' : ' ') + '] ';\n  }\n}","var autolinkLiteral = require('mdast-util-gfm-autolink-literal/from-markdown');\n\nvar strikethrough = require('mdast-util-gfm-strikethrough/from-markdown');\n\nvar table = require('mdast-util-gfm-table/from-markdown');\n\nvar taskListItem = require('mdast-util-gfm-task-list-item/from-markdown');\n\nvar own = {}.hasOwnProperty;\nmodule.exports = configure([autolinkLiteral, strikethrough, table, taskListItem]);\n\nfunction configure(extensions) {\n  var config = {\n    transforms: [],\n    canContainEols: []\n  };\n  var length = extensions.length;\n  var index = -1;\n\n  while (++index < length) {\n    extension(config, extensions[index]);\n  }\n\n  return config;\n}\n\nfunction extension(config, extension) {\n  var key;\n  var left;\n  var right;\n\n  for (key in extension) {\n    left = own.call(config, key) ? config[key] : config[key] = {};\n    right = extension[key];\n\n    if (key === 'canContainEols' || key === 'transforms') {\n      config[key] = [].concat(left, right);\n    } else {\n      Object.assign(left, right);\n    }\n  }\n}","var autolinkLiteral = require('mdast-util-gfm-autolink-literal/to-markdown');\n\nvar strikethrough = require('mdast-util-gfm-strikethrough/to-markdown');\n\nvar table = require('mdast-util-gfm-table/to-markdown');\n\nvar taskListItem = require('mdast-util-gfm-task-list-item/to-markdown');\n\nvar configure = require('mdast-util-to-markdown/lib/configure');\n\nmodule.exports = toMarkdown;\n\nfunction toMarkdown(options) {\n  var config = configure({\n    handlers: {},\n    join: [],\n    unsafe: [],\n    options: {}\n  }, {\n    extensions: [autolinkLiteral, strikethrough, table(options), taskListItem]\n  });\n  return Object.assign(config.options, {\n    handlers: config.handlers,\n    join: config.join,\n    unsafe: config.unsafe\n  });\n}","module.exports = configure;\n\nfunction configure(base, extension) {\n  var index = -1;\n  var key; // First do subextensions.\n\n  if (extension.extensions) {\n    while (++index < extension.extensions.length) {\n      configure(base, extension.extensions[index]);\n    }\n  }\n\n  for (key in extension) {\n    if (key === 'extensions') {// Empty.\n    } else if (key === 'unsafe' || key === 'join') {\n      base[key] = base[key].concat(extension[key] || []);\n    } else if (key === 'handlers') {\n      base[key] = Object.assign(base[key], extension[key] || {});\n    } else {\n      base.options[key] = extension[key];\n    }\n  }\n\n  return base;\n}","module.exports = inlineCode;\ninlineCode.peek = inlineCodePeek;\n\nvar patternCompile = require('../util/pattern-compile');\n\nfunction inlineCode(node, parent, context) {\n  var value = node.value || '';\n  var sequence = '`';\n  var index = -1;\n  var pattern;\n  var expression;\n  var match;\n  var position; // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`';\n  } // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n\n\n  if (/[^ \\r\\n]/.test(value) && (/[ \\r\\n`]/.test(value.charAt(0)) || /[ \\r\\n`]/.test(value.charAt(value.length - 1)))) {\n    value = ' ' + value + ' ';\n  } // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n\n\n  while (++index < context.unsafe.length) {\n    pattern = context.unsafe[index]; // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n\n    if (!pattern.atBreak) continue;\n    expression = patternCompile(pattern);\n\n    while (match = expression.exec(value)) {\n      position = match.index; // Support CRLF (patterns only look for one of the characters).\n\n      if (value.charCodeAt(position) === 10\n      /* `\\n` */\n      && value.charCodeAt(position - 1) === 13\n      /* `\\r` */\n      ) {\n        position--;\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1);\n    }\n  }\n\n  return sequence + value + sequence;\n}\n\nfunction inlineCodePeek() {\n  return '`';\n}","module.exports = listItem;\n\nvar repeat = require('repeat-string');\n\nvar checkBullet = require('../util/check-bullet');\n\nvar checkListItemIndent = require('../util/check-list-item-indent');\n\nvar flow = require('../util/container-flow');\n\nvar indentLines = require('../util/indent-lines');\n\nfunction listItem(node, parent, context) {\n  var bullet = checkBullet(context);\n  var listItemIndent = checkListItemIndent(context);\n  var size;\n  var value;\n  var exit;\n\n  if (parent && parent.ordered) {\n    bullet = (parent.start > -1 ? parent.start : 1) + (context.options.incrementListMarker === false ? 0 : parent.children.indexOf(node)) + '.';\n  }\n\n  size = bullet.length + 1;\n\n  if (listItemIndent === 'tab' || listItemIndent === 'mixed' && (parent && parent.spread || node.spread)) {\n    size = Math.ceil(size / 4) * 4;\n  }\n\n  exit = context.enter('listItem');\n  value = indentLines(flow(node, context), map);\n  exit();\n  return value;\n\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : repeat(' ', size)) + line;\n    }\n\n    return (blank ? bullet : bullet + repeat(' ', size - bullet.length)) + line;\n  }\n}","module.exports = checkBullet;\n\nfunction checkBullet(context) {\n  var marker = context.options.bullet || '*';\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error('Cannot serialize items with `' + marker + '` for `options.bullet`, expected `*`, `+`, or `-`');\n  }\n\n  return marker;\n}","module.exports = checkListItemIndent;\n\nfunction checkListItemIndent(context) {\n  var style = context.options.listItemIndent || 'tab';\n\n  if (style === 1 || style === '1') {\n    return 'one';\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error('Cannot serialize items with `' + style + '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`');\n  }\n\n  return style;\n}","module.exports = flow;\n\nvar repeat = require('repeat-string');\n\nfunction flow(parent, context) {\n  var children = parent.children || [];\n  var results = [];\n  var index = -1;\n  var child;\n\n  while (++index < children.length) {\n    child = children[index];\n    results.push(context.handle(child, parent, context, {\n      before: '\\n',\n      after: '\\n'\n    }));\n\n    if (index + 1 < children.length) {\n      results.push(between(child, children[index + 1]));\n    }\n  }\n\n  return results.join('');\n\n  function between(left, right) {\n    var index = -1;\n    var result;\n\n    while (++index < context.join.length) {\n      result = context.join[index](left, right, parent, context);\n\n      if (result === true || result === 1) {\n        break;\n      }\n\n      if (typeof result === 'number') {\n        return repeat('\\n', 1 + Number(result));\n      }\n\n      if (result === false) {\n        return '\\n\\n<!---->\\n\\n';\n      }\n    }\n\n    return '\\n\\n';\n  }\n}","module.exports = phrasing;\n\nfunction phrasing(parent, context, safeOptions) {\n  var children = parent.children || [];\n  var results = [];\n  var index = -1;\n  var before = safeOptions.before;\n  var after;\n  var handle;\n  var child;\n\n  while (++index < children.length) {\n    child = children[index];\n\n    if (index + 1 < children.length) {\n      handle = context.handle.handlers[children[index + 1].type];\n      if (handle && handle.peek) handle = handle.peek;\n      after = handle ? handle(children[index + 1], parent, context, {\n        before: '',\n        after: ''\n      }).charAt(0) : '';\n    } else {\n      after = safeOptions.after;\n    } // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n\n\n    if (results.length > 0 && (before === '\\r' || before === '\\n') && child.type === 'html') {\n      results[results.length - 1] = results[results.length - 1].replace(/(\\r?\\n|\\r)$/, ' ');\n      before = ' ';\n    }\n\n    results.push(context.handle(child, parent, context, {\n      before: before,\n      after: after\n    }));\n    before = results[results.length - 1].slice(-1);\n  }\n\n  return results.join('');\n}","module.exports = indentLines;\nvar eol = /\\r?\\n|\\r/g;\n\nfunction indentLines(value, map) {\n  var result = [];\n  var start = 0;\n  var line = 0;\n  var match;\n\n  while (match = eol.exec(value)) {\n    one(value.slice(start, match.index));\n    result.push(match[0]);\n    start = match.index + match[0].length;\n    line++;\n  }\n\n  one(value.slice(start));\n  return result.join('');\n\n  function one(value) {\n    result.push(map(value, line, !value));\n  }\n}","module.exports = patternCompile;\n\nfunction patternCompile(pattern) {\n  var before;\n  var after;\n\n  if (!pattern._compiled) {\n    before = pattern.before ? '(?:' + pattern.before + ')' : '';\n    after = pattern.after ? '(?:' + pattern.after + ')' : '';\n\n    if (pattern.atBreak) {\n      before = '[\\\\r\\\\n][\\\\t ]*' + before;\n    }\n\n    pattern._compiled = new RegExp((before ? '(' + before + ')' : '') + (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') + pattern.character + (after || ''), 'g');\n  }\n\n  return pattern._compiled;\n}","module.exports = require('./syntax');","var asciiAlpha = require('micromark/dist/character/ascii-alpha');\n\nvar asciiAlphanumeric = require('micromark/dist/character/ascii-alphanumeric');\n\nvar asciiControl = require('micromark/dist/character/ascii-control');\n\nvar markdownLineEnding = require('micromark/dist/character/markdown-line-ending');\n\nvar unicodePunctuation = require('micromark/dist/character/unicode-punctuation');\n\nvar unicodeWhitespace = require('micromark/dist/character/unicode-whitespace');\n\nvar www = {\n  tokenize: tokenizeWww,\n  partial: true\n};\nvar domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n};\nvar path = {\n  tokenize: tokenizePath,\n  partial: true\n};\nvar punctuation = {\n  tokenize: tokenizePunctuation,\n  partial: true\n};\nvar namedCharacterReference = {\n  tokenize: tokenizeNamedCharacterReference,\n  partial: true\n};\nvar wwwAutolink = {\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n};\nvar httpAutolink = {\n  tokenize: tokenizeHttpAutolink,\n  previous: previousHttp\n};\nvar emailAutolink = {\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n};\nvar text = {}; // Export hooked constructs.\n\nexports.text = text; // `0`\n\nvar code = 48; // While the code is smaller than `{`.\n\nwhile (code < 123) {\n  text[code] = emailAutolink;\n  code++; // Jump from `:` -> `A`\n\n  if (code === 58) code = 65; // Jump from `[` -> `a`\n  else if (code === 91) code = 97;\n} // `+`\n\n\ntext[43] = emailAutolink; // `-`\n\ntext[45] = emailAutolink; // `.`\n\ntext[46] = emailAutolink; // `_`\n\ntext[95] = emailAutolink; // `h`.\n\ntext[72] = [emailAutolink, httpAutolink];\ntext[104] = [emailAutolink, httpAutolink]; // `w`.\n\ntext[87] = [emailAutolink, wwwAutolink];\ntext[119] = [emailAutolink, wwwAutolink];\n\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  var self = this;\n  var hasDot;\n  return start;\n\n  function start(code) {\n    /* istanbul ignore next - hooks. */\n    if (!gfmAtext(code) || !previousEmail(self.previous) || previous(self.events)) {\n      return nok(code);\n    }\n\n    effects.enter('literalAutolink');\n    effects.enter('literalAutolinkEmail');\n    return atext(code);\n  }\n\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code);\n      return atext;\n    } // `@`\n\n\n    if (code === 64) {\n      effects.consume(code);\n      return label;\n    }\n\n    return nok(code);\n  }\n\n  function label(code) {\n    // `.`\n    if (code === 46) {\n      return effects.check(punctuation, done, dotContinuation)(code);\n    }\n\n    if ( // `-`\n    code === 45 || // `_`\n    code === 95) {\n      return effects.check(punctuation, nok, dashOrUnderscoreContinuation)(code);\n    }\n\n    if (asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return label;\n    }\n\n    return done(code);\n  }\n\n  function dotContinuation(code) {\n    effects.consume(code);\n    hasDot = true;\n    return label;\n  }\n\n  function dashOrUnderscoreContinuation(code) {\n    effects.consume(code);\n    return afterDashOrUnderscore;\n  }\n\n  function afterDashOrUnderscore(code) {\n    // `.`\n    if (code === 46) {\n      return effects.check(punctuation, nok, dotContinuation)(code);\n    }\n\n    return label(code);\n  }\n\n  function done(code) {\n    if (hasDot) {\n      effects.exit('literalAutolinkEmail');\n      effects.exit('literalAutolink');\n      return ok(code);\n    }\n\n    return nok(code);\n  }\n}\n\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  var self = this;\n  return start;\n\n  function start(code) {\n    /* istanbul ignore next - hooks. */\n    if (code !== 87 && code - 32 !== 87 || !previousWww(self.previous) || previous(self.events)) {\n      return nok(code);\n    }\n\n    effects.enter('literalAutolink');\n    effects.enter('literalAutolinkWww'); // For `www.` we check instead of attempt, because when it matches, GH\n    // treats it as part of a domain (yes, it says a valid domain must come\n    // after `www.`, but that’s not how it’s implemented by them).\n\n    return effects.check(www, effects.attempt(domain, effects.attempt(path, done), nok), nok)(code);\n  }\n\n  function done(code) {\n    effects.exit('literalAutolinkWww');\n    effects.exit('literalAutolink');\n    return ok(code);\n  }\n}\n\nfunction tokenizeHttpAutolink(effects, ok, nok) {\n  var self = this;\n  return start;\n\n  function start(code) {\n    /* istanbul ignore next - hooks. */\n    if (code !== 72 && code - 32 !== 72 || !previousHttp(self.previous) || previous(self.events)) {\n      return nok(code);\n    }\n\n    effects.enter('literalAutolink');\n    effects.enter('literalAutolinkHttp');\n    effects.consume(code);\n    return t1;\n  }\n\n  function t1(code) {\n    // `t`\n    if (code === 84 || code - 32 === 84) {\n      effects.consume(code);\n      return t2;\n    }\n\n    return nok(code);\n  }\n\n  function t2(code) {\n    // `t`\n    if (code === 84 || code - 32 === 84) {\n      effects.consume(code);\n      return p;\n    }\n\n    return nok(code);\n  }\n\n  function p(code) {\n    // `p`\n    if (code === 80 || code - 32 === 80) {\n      effects.consume(code);\n      return s;\n    }\n\n    return nok(code);\n  }\n\n  function s(code) {\n    // `s`\n    if (code === 83 || code - 32 === 83) {\n      effects.consume(code);\n      return colon;\n    }\n\n    return colon(code);\n  }\n\n  function colon(code) {\n    // `:`\n    if (code === 58) {\n      effects.consume(code);\n      return slash1;\n    }\n\n    return nok(code);\n  }\n\n  function slash1(code) {\n    // `/`\n    if (code === 47) {\n      effects.consume(code);\n      return slash2;\n    }\n\n    return nok(code);\n  }\n\n  function slash2(code) {\n    // `/`\n    if (code === 47) {\n      effects.consume(code);\n      return after;\n    }\n\n    return nok(code);\n  }\n\n  function after(code) {\n    return asciiControl(code) || unicodeWhitespace(code) || unicodePunctuation(code) ? nok(code) : effects.attempt(domain, effects.attempt(path, done), nok)(code);\n  }\n\n  function done(code) {\n    effects.exit('literalAutolinkHttp');\n    effects.exit('literalAutolink');\n    return ok(code);\n  }\n}\n\nfunction tokenizeWww(effects, ok, nok) {\n  return start;\n\n  function start(code) {\n    // Assume a `w`.\n    effects.consume(code);\n    return w2;\n  }\n\n  function w2(code) {\n    // `w`\n    if (code === 87 || code - 32 === 87) {\n      effects.consume(code);\n      return w3;\n    }\n\n    return nok(code);\n  }\n\n  function w3(code) {\n    // `w`\n    if (code === 87 || code - 32 === 87) {\n      effects.consume(code);\n      return dot;\n    }\n\n    return nok(code);\n  }\n\n  function dot(code) {\n    // `.`\n    if (code === 46) {\n      effects.consume(code);\n      return after;\n    }\n\n    return nok(code);\n  }\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? nok(code) : ok(code);\n  }\n}\n\nfunction tokenizeDomain(effects, ok, nok) {\n  var hasUnderscoreInLastSegment;\n  var hasUnderscoreInLastLastSegment;\n  return domain;\n\n  function domain(code) {\n    // `&`\n    if (code === 38) {\n      return effects.check(namedCharacterReference, done, punctuationContinuation)(code);\n    }\n\n    if (code === 46\n    /* `.` */\n    || code === 95\n    /* `_` */\n    ) {\n      return effects.check(punctuation, done, punctuationContinuation)(code);\n    } // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n\n\n    if (asciiControl(code) || unicodeWhitespace(code) || code !== 45\n    /* `-` */\n    && unicodePunctuation(code)) {\n      return done(code);\n    }\n\n    effects.consume(code);\n    return domain;\n  }\n\n  function punctuationContinuation(code) {\n    // `.`\n    if (code === 46) {\n      hasUnderscoreInLastLastSegment = hasUnderscoreInLastSegment;\n      hasUnderscoreInLastSegment = undefined;\n      effects.consume(code);\n      return domain;\n    } // `_`\n\n\n    if (code === 95) hasUnderscoreInLastSegment = true;\n    effects.consume(code);\n    return domain;\n  }\n\n  function done(code) {\n    if (!hasUnderscoreInLastLastSegment && !hasUnderscoreInLastSegment) {\n      return ok(code);\n    }\n\n    return nok(code);\n  }\n}\n\nfunction tokenizePath(effects, ok) {\n  var balance = 0;\n  return inPath;\n\n  function inPath(code) {\n    // `&`\n    if (code === 38) {\n      return effects.check(namedCharacterReference, ok, continuedPunctuation)(code);\n    } // `(`\n\n\n    if (code === 40) {\n      balance++;\n    } // `)`\n\n\n    if (code === 41) {\n      return effects.check(punctuation, parenAtPathEnd, continuedPunctuation)(code);\n    }\n\n    if (pathEnd(code)) {\n      return ok(code);\n    }\n\n    if (trailingPunctuation(code)) {\n      return effects.check(punctuation, ok, continuedPunctuation)(code);\n    }\n\n    effects.consume(code);\n    return inPath;\n  }\n\n  function continuedPunctuation(code) {\n    effects.consume(code);\n    return inPath;\n  }\n\n  function parenAtPathEnd(code) {\n    balance--;\n    return balance < 0 ? ok(code) : continuedPunctuation(code);\n  }\n}\n\nfunction tokenizeNamedCharacterReference(effects, ok, nok) {\n  return start;\n\n  function start(code) {\n    // Assume an ampersand.\n    effects.consume(code);\n    return inside;\n  }\n\n  function inside(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return inside;\n    } // `;`\n\n\n    if (code === 59) {\n      effects.consume(code);\n      return after;\n    }\n\n    return nok(code);\n  }\n\n  function after(code) {\n    // If the named character reference is followed by the end of the path, it’s\n    // not continued punctuation.\n    return pathEnd(code) ? ok(code) : nok(code);\n  }\n}\n\nfunction tokenizePunctuation(effects, ok, nok) {\n  return start;\n\n  function start(code) {\n    // Always a valid trailing punctuation marker.\n    effects.consume(code);\n    return after;\n  }\n\n  function after(code) {\n    // Check the next.\n    if (trailingPunctuation(code)) {\n      effects.consume(code);\n      return after;\n    } // If the punctuation marker is followed by the end of the path, it’s not\n    // continued punctuation.\n\n\n    return pathEnd(code) ? ok(code) : nok(code);\n  }\n}\n\nfunction trailingPunctuation(code) {\n  return (// `!`\n    code === 33 || // `\"`\n    code === 34 || // `'`\n    code === 39 || // `)`\n    code === 41 || // `*`\n    code === 42 || // `,`\n    code === 44 || // `.`\n    code === 46 || // `:`\n    code === 58 || // `;`\n    code === 59 || // `<`\n    code === 60 || // `?`\n    code === 63 || // `_`.\n    code === 95 || // `~`\n    code === 126\n  );\n}\n\nfunction pathEnd(code) {\n  return (// EOF.\n    code === null || // CR, LF, CRLF, HT, VS.\n    code < 0 || // Space.\n    code === 32 || // `<`\n    code === 60\n  );\n}\n\nfunction gfmAtext(code) {\n  return code === 43\n  /* `+` */\n  || code === 45\n  /* `-` */\n  || code === 46\n  /* `.` */\n  || code === 95\n  /* `_` */\n  || asciiAlphanumeric(code);\n}\n\nfunction previousWww(code) {\n  return code === null || code < 0 || code === 32\n  /* ` ` */\n  || code === 40\n  /* `(` */\n  || code === 42\n  /* `*` */\n  || code === 95\n  /* `_` */\n  || code === 126\n  /* `~` */\n  ;\n}\n\nfunction previousHttp(code) {\n  return code === null || !asciiAlpha(code);\n}\n\nfunction previousEmail(code) {\n  return code !== 47\n  /* `/` */\n  && previousHttp(code);\n}\n\nfunction previous(events) {\n  var index = events.length;\n\n  while (index--) {\n    if ((events[index][1].type === 'labelLink' || events[index][1].type === 'labelImage') && !events[index][1]._balanced) {\n      return true;\n    }\n  }\n}","module.exports = create;\n\nvar classifyCharacter = require('micromark/dist/util/classify-character');\n\nvar chunkedSplice = require('micromark/dist/util/chunked-splice');\n\nvar resolveAll = require('micromark/dist/util/resolve-all');\n\nvar shallow = require('micromark/dist/util/shallow');\n\nfunction create(options) {\n  var settings = options || {};\n  var single = settings.singleTilde;\n  var tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  };\n\n  if (single === null || single === undefined) {\n    single = true;\n  }\n\n  return {\n    text: {\n      126: tokenizer\n    },\n    insideSpan: {\n      null: tokenizer\n    }\n  }; // Take events and resolve strikethrough.\n\n  function resolveAllStrikethrough(events, context) {\n    var index = -1;\n    var strikethrough;\n    var text;\n    var open;\n    var nextEvents; // Walk through all events.\n\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (events[index][0] === 'enter' && events[index][1].type === 'strikethroughSequenceTemporary' && events[index][1]._close) {\n        open = index; // Now walk back to find an opener.\n\n        while (open--) {\n          // Find a token that can open the closer.\n          if (events[open][0] === 'exit' && events[open][1].type === 'strikethroughSequenceTemporary' && events[open][1]._open && // If the sizes are the same:\n          events[index][1].end.offset - events[index][1].start.offset === events[open][1].end.offset - events[open][1].start.offset) {\n            events[index][1].type = 'strikethroughSequence';\n            events[open][1].type = 'strikethroughSequence';\n            strikethrough = {\n              type: 'strikethrough',\n              start: shallow(events[open][1].start),\n              end: shallow(events[index][1].end)\n            };\n            text = {\n              type: 'strikethroughText',\n              start: shallow(events[open][1].end),\n              end: shallow(events[index][1].start)\n            }; // Opening.\n\n            nextEvents = [['enter', strikethrough, context], ['enter', events[open][1], context], ['exit', events[open][1], context], ['enter', text, context]]; // Between.\n\n            chunkedSplice(nextEvents, nextEvents.length, 0, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + 1, index), context)); // Closing.\n\n            chunkedSplice(nextEvents, nextEvents.length, 0, [['exit', text, context], ['enter', events[index][1], context], ['exit', events[index][1], context], ['exit', strikethrough, context]]);\n            chunkedSplice(events, open - 1, index - open + 3, nextEvents);\n            index = open + nextEvents.length - 2;\n            break;\n          }\n        }\n      }\n    }\n\n    return removeRemainingSequences(events);\n  }\n\n  function removeRemainingSequences(events) {\n    var index = -1;\n    var length = events.length;\n\n    while (++index < length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data';\n      }\n    }\n\n    return events;\n  }\n\n  function tokenizeStrikethrough(effects, ok, nok) {\n    var previous = this.previous;\n    var events = this.events;\n    var size = 0;\n    return start;\n\n    function start(code) {\n      if (code !== 126 || previous === 126 && events[events.length - 1][1].type !== 'characterEscape') {\n        return nok(code);\n      }\n\n      effects.enter('strikethroughSequenceTemporary');\n      return more(code);\n    }\n\n    function more(code) {\n      var before = classifyCharacter(previous);\n      var token;\n      var after;\n\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code);\n        effects.consume(code);\n        size++;\n        return more;\n      }\n\n      if (size < 2 && !single) return nok(code);\n      token = effects.exit('strikethroughSequenceTemporary');\n      after = classifyCharacter(code);\n      token._open = !after || after === 2 && before;\n      token._close = !before || before === 2 && after;\n      return ok(code);\n    }\n  }\n}","module.exports = require('./syntax');","exports.flow = {\n  null: {\n    tokenize: tokenizeTable,\n    resolve: resolveTable,\n    interruptible: true\n  }\n};\n\nvar createSpace = require('micromark/dist/tokenize/factory-space');\n\nvar setextUnderlineMini = {\n  tokenize: tokenizeSetextUnderlineMini,\n  partial: true\n};\nvar nextPrefixedOrBlank = {\n  tokenize: tokenizeNextPrefixedOrBlank,\n  partial: true\n};\n\nfunction resolveTable(events, context) {\n  var length = events.length;\n  var index = -1;\n  var token;\n  var inHead;\n  var inDelimiterRow;\n  var inRow;\n  var cell;\n  var content;\n  var text;\n  var contentStart;\n  var contentEnd;\n  var cellStart;\n\n  while (++index < length) {\n    token = events[index][1];\n\n    if (inRow) {\n      if (token.type === 'temporaryTableCellContent') {\n        contentStart = contentStart || index;\n        contentEnd = index;\n      }\n\n      if ( // Combine separate content parts into one.\n      (token.type === 'tableCellDivider' || token.type === 'tableRow') && contentEnd) {\n        content = {\n          type: 'tableContent',\n          start: events[contentStart][1].start,\n          end: events[contentEnd][1].end\n        };\n        text = {\n          type: 'chunkText',\n          start: content.start,\n          end: content.end,\n          contentType: 'text'\n        };\n        events.splice(contentStart, contentEnd - contentStart + 1, ['enter', content, context], ['enter', text, context], ['exit', text, context], ['exit', content, context]);\n        index -= contentEnd - contentStart - 3;\n        length = events.length;\n        contentStart = undefined;\n        contentEnd = undefined;\n      }\n    }\n\n    if (events[index][0] === 'exit' && cellStart && cellStart + 1 < index && (token.type === 'tableCellDivider' || token.type === 'tableRow' && (cellStart + 3 < index || events[cellStart][1].type !== 'whitespace'))) {\n      cell = {\n        type: inDelimiterRow ? 'tableDelimiter' : inHead ? 'tableHeader' : 'tableData',\n        start: events[cellStart][1].start,\n        end: events[index][1].end\n      };\n      events.splice(index + (token.type === 'tableCellDivider' ? 1 : 0), 0, ['exit', cell, context]);\n      events.splice(cellStart, 0, ['enter', cell, context]);\n      index += 2;\n      length = events.length;\n      cellStart = index + 1;\n    }\n\n    if (token.type === 'tableRow') {\n      inRow = events[index][0] === 'enter';\n\n      if (inRow) {\n        cellStart = index + 1;\n      }\n    }\n\n    if (token.type === 'tableDelimiterRow') {\n      inDelimiterRow = events[index][0] === 'enter';\n\n      if (inDelimiterRow) {\n        cellStart = index + 1;\n      }\n    }\n\n    if (token.type === 'tableHead') {\n      inHead = events[index][0] === 'enter';\n    }\n  }\n\n  return events;\n}\n\nfunction tokenizeTable(effects, ok, nok) {\n  var align = [];\n  var tableHeaderCount = 0;\n  var seenDelimiter;\n  var hasDash;\n  return start;\n\n  function start(code) {\n    /* istanbul ignore if - used to be passed in beta micromark versions. */\n    if (code === null || code === -5 || code === -4 || code === -3) {\n      return nok(code);\n    }\n\n    effects.enter('table')._align = align;\n    effects.enter('tableHead');\n    effects.enter('tableRow'); // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerHead(code);\n    }\n\n    tableHeaderCount++;\n    effects.enter('temporaryTableCellContent'); // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentHead(code);\n  }\n\n  function cellDividerHead(code) {\n    // Always a pipe.\n    effects.enter('tableCellDivider');\n    effects.consume(code);\n    effects.exit('tableCellDivider');\n    seenDelimiter = true;\n    return cellBreakHead;\n  }\n\n  function cellBreakHead(code) {\n    // EOF, CR, LF, CRLF.\n    if (code === null || code === -5 || code === -4 || code === -3) {\n      return atRowEndHead(code);\n    } // HT, VS, SP.\n\n\n    if (code === -2 || code === -1 || code === 32) {\n      effects.enter('whitespace');\n      effects.consume(code);\n      return inWhitespaceHead;\n    }\n\n    if (seenDelimiter) {\n      seenDelimiter = undefined;\n      tableHeaderCount++;\n    } // `|`\n\n\n    if (code === 124) {\n      return cellDividerHead(code);\n    } // Anything else is cell content.\n\n\n    effects.enter('temporaryTableCellContent');\n    return inCellContentHead(code);\n  }\n\n  function inWhitespaceHead(code) {\n    // HT, VS, SP.\n    if (code === -2 || code === -1 || code === 32) {\n      effects.consume(code);\n      return inWhitespaceHead;\n    }\n\n    effects.exit('whitespace');\n    return cellBreakHead(code);\n  }\n\n  function inCellContentHead(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code < 0 || code === 32 || code === 124) {\n      effects.exit('temporaryTableCellContent');\n      return cellBreakHead(code);\n    }\n\n    effects.consume(code); // `\\`\n\n    return code === 92 ? inCellContentEscapeHead : inCellContentHead;\n  }\n\n  function inCellContentEscapeHead(code) {\n    // `\\` or `|`\n    if (code === 92 || code === 124) {\n      effects.consume(code);\n      return inCellContentHead;\n    } // Anything else.\n\n\n    return inCellContentHead(code);\n  }\n\n  function atRowEndHead(code) {\n    if (code === null) {\n      return nok(code);\n    }\n\n    effects.exit('tableRow');\n    effects.exit('tableHead'); // Always a line ending.\n\n    effects.enter('lineEnding');\n    effects.consume(code);\n    effects.exit('lineEnding'); // If a setext heading, exit.\n\n    return effects.check(setextUnderlineMini, nok, // Support an indent before the delimiter row.\n    createSpace(effects, rowStartDelimiter, 'linePrefix', 4));\n  }\n\n  function rowStartDelimiter(code) {\n    // If there’s another space, or we’re at the EOL/EOF, exit.\n    if (code === null || code < 0 || code === 32) {\n      return nok(code);\n    }\n\n    effects.enter('tableDelimiterRow');\n    return atDelimiterRowBreak(code);\n  }\n\n  function atDelimiterRowBreak(code) {\n    // EOF, CR, LF, CRLF.\n    if (code === null || code === -5 || code === -4 || code === -3) {\n      return rowEndDelimiter(code);\n    } // HT, VS, SP.\n\n\n    if (code === -2 || code === -1 || code === 32) {\n      effects.enter('whitespace');\n      effects.consume(code);\n      return inWhitespaceDelimiter;\n    } // `-`\n\n\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller');\n      effects.consume(code);\n      hasDash = true;\n      align.push(null);\n      return inFillerDelimiter;\n    } // `:`\n\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment');\n      effects.consume(code);\n      effects.exit('tableDelimiterAlignment');\n      align.push('left');\n      return afterLeftAlignment;\n    } // If we start with a pipe, we open a cell marker.\n\n\n    if (code === 124) {\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      return atDelimiterRowBreak;\n    }\n\n    return nok(code);\n  }\n\n  function inWhitespaceDelimiter(code) {\n    // HT, VS, SP.\n    if (code === -2 || code === -1 || code === 32) {\n      effects.consume(code);\n      return inWhitespaceDelimiter;\n    }\n\n    effects.exit('whitespace');\n    return atDelimiterRowBreak(code);\n  }\n\n  function inFillerDelimiter(code) {\n    // `-`\n    if (code === 45) {\n      effects.consume(code);\n      return inFillerDelimiter;\n    }\n\n    effects.exit('tableDelimiterFiller'); // `:`\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment');\n      effects.consume(code);\n      effects.exit('tableDelimiterAlignment');\n      align[align.length - 1] = align[align.length - 1] === 'left' ? 'center' : 'right';\n      return afterRightAlignment;\n    }\n\n    return atDelimiterRowBreak(code);\n  }\n\n  function afterLeftAlignment(code) {\n    // `-`\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller');\n      effects.consume(code);\n      hasDash = true;\n      return inFillerDelimiter;\n    } // Anything else is not ok.\n\n\n    return nok(code);\n  }\n\n  function afterRightAlignment(code) {\n    // EOF, CR, LF, CRLF.\n    if (code === null || code === -5 || code === -4 || code === -3) {\n      return rowEndDelimiter(code);\n    } // HT, VS, SP.\n\n\n    if (code === -2 || code === -1 || code === 32) {\n      effects.enter('whitespace');\n      effects.consume(code);\n      return inWhitespaceDelimiter;\n    } // `|`\n\n\n    if (code === 124) {\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      return atDelimiterRowBreak;\n    }\n\n    return nok(code);\n  }\n\n  function rowEndDelimiter(code) {\n    effects.exit('tableDelimiterRow'); // Exit if there was no dash at all, or if the header cell count is not the\n    // delimiter cell count.\n\n    if (!hasDash || tableHeaderCount !== align.length) {\n      return nok(code);\n    }\n\n    if (code === null) {\n      return tableClose(code);\n    }\n\n    return effects.check(nextPrefixedOrBlank, tableClose, tableContinue)(code);\n  }\n\n  function tableClose(code) {\n    effects.exit('table');\n    return ok(code);\n  }\n\n  function tableContinue(code) {\n    // Always a line ending.\n    effects.enter('lineEnding');\n    effects.consume(code);\n    effects.exit('lineEnding'); // We checked that it’s not a prefixed or blank line, so we’re certain a\n    // body is coming, though it may be indented.\n\n    return createSpace(effects, bodyStart, 'linePrefix', 4);\n  }\n\n  function bodyStart(code) {\n    effects.enter('tableBody');\n    return rowStartBody(code);\n  }\n\n  function rowStartBody(code) {\n    effects.enter('tableRow'); // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerBody(code);\n    }\n\n    effects.enter('temporaryTableCellContent'); // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentBody(code);\n  }\n\n  function cellDividerBody(code) {\n    // Always a pipe.\n    effects.enter('tableCellDivider');\n    effects.consume(code);\n    effects.exit('tableCellDivider');\n    return cellBreakBody;\n  }\n\n  function cellBreakBody(code) {\n    // EOF, CR, LF, CRLF.\n    if (code === null || code === -5 || code === -4 || code === -3) {\n      return atRowEndBody(code);\n    } // HT, VS, SP.\n\n\n    if (code === -2 || code === -1 || code === 32) {\n      effects.enter('whitespace');\n      effects.consume(code);\n      return inWhitespaceBody;\n    } // `|`\n\n\n    if (code === 124) {\n      return cellDividerBody(code);\n    } // Anything else is cell content.\n\n\n    effects.enter('temporaryTableCellContent');\n    return inCellContentBody(code);\n  }\n\n  function inWhitespaceBody(code) {\n    // HT, VS, SP.\n    if (code === -2 || code === -1 || code === 32) {\n      effects.consume(code);\n      return inWhitespaceBody;\n    }\n\n    effects.exit('whitespace');\n    return cellBreakBody(code);\n  }\n\n  function inCellContentBody(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code < 0 || code === 32 || code === 124) {\n      effects.exit('temporaryTableCellContent');\n      return cellBreakBody(code);\n    }\n\n    effects.consume(code); // `\\`\n\n    return code === 92 ? inCellContentEscapeBody : inCellContentBody;\n  }\n\n  function inCellContentEscapeBody(code) {\n    // `\\` or `|`\n    if (code === 92 || code === 124) {\n      effects.consume(code);\n      return inCellContentBody;\n    } // Anything else.\n\n\n    return inCellContentBody(code);\n  }\n\n  function atRowEndBody(code) {\n    effects.exit('tableRow');\n\n    if (code === null) {\n      return tableBodyClose(code);\n    }\n\n    return effects.check(nextPrefixedOrBlank, tableBodyClose, tableBodyContinue)(code);\n  }\n\n  function tableBodyClose(code) {\n    effects.exit('tableBody');\n    return tableClose(code);\n  }\n\n  function tableBodyContinue(code) {\n    // Always a line ending.\n    effects.enter('lineEnding');\n    effects.consume(code);\n    effects.exit('lineEnding'); // Support an optional prefix, then start a body row.\n\n    return createSpace(effects, rowStartBody, 'linePrefix', 4);\n  }\n} // Based on micromark, but that won’t work as we’re in a table, and that expects\n// content.\n// <https://github.com/micromark/micromark/blob/main/lib/tokenize/setext-underline.js>\n\n\nfunction tokenizeSetextUnderlineMini(effects, ok, nok) {\n  return start;\n\n  function start(code) {\n    // `-`\n    if (code !== 45) {\n      return nok(code);\n    }\n\n    effects.enter('setextUnderline');\n    return sequence(code);\n  }\n\n  function sequence(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return sequence;\n    }\n\n    return whitespace(code);\n  }\n\n  function whitespace(code) {\n    if (code === -2 || code === -1 || code === 32) {\n      effects.consume(code);\n      return whitespace;\n    }\n\n    if (code === null || code === -5 || code === -4 || code === -3) {\n      return ok(code);\n    }\n\n    return nok(code);\n  }\n}\n\nfunction tokenizeNextPrefixedOrBlank(effects, ok, nok) {\n  var size = 0;\n  return start;\n\n  function start(code) {\n    // This is a check, so we don’t care about tokens, but we open a bogus one\n    // so we’re valid.\n    effects.enter('check'); // EOL.\n\n    effects.consume(code);\n    return whitespace;\n  }\n\n  function whitespace(code) {\n    // VS or SP.\n    if (code === -1 || code === 32) {\n      effects.consume(code);\n      size++;\n      return size === 4 ? ok : whitespace;\n    } // EOF or whitespace\n\n\n    if (code === null || code < 0) {\n      return ok(code);\n    } // Anything else.\n\n\n    return nok(code);\n  }\n}","module.exports = require('./syntax');","var markdownLineEndingOrSpace = require('micromark/dist/character/markdown-line-ending-or-space');\n\nvar spaceFactory = require('micromark/dist/tokenize/factory-space');\n\nvar prefixSize = require('micromark/dist/util/prefix-size');\n\nvar tasklistCheck = {\n  tokenize: tokenizeTasklistCheck\n};\nexports.text = {\n  91: tasklistCheck\n};\n\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  var self = this;\n  return open;\n\n  function open(code) {\n    if ( // Exit if not `[`.\n    code !== 91 || // Exit if there’s stuff before.\n    self.previous !== null || // Exit if not in the first content that is the first child of a list\n    // item.\n    !self._gfmTasklistFirstContentOfListItem) {\n      return nok(code);\n    }\n\n    effects.enter('taskListCheck');\n    effects.enter('taskListCheckMarker');\n    effects.consume(code);\n    effects.exit('taskListCheckMarker');\n    return inside;\n  }\n\n  function inside(code) {\n    // Tab or space.\n    if (code === -2 || code === 32) {\n      effects.enter('taskListCheckValueUnchecked');\n      effects.consume(code);\n      effects.exit('taskListCheckValueUnchecked');\n      return close;\n    } // Upper- and lower `x`.\n\n\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked');\n      effects.consume(code);\n      effects.exit('taskListCheckValueChecked');\n      return close;\n    }\n\n    return nok(code);\n  }\n\n  function close(code) {\n    // `]`\n    if (code === 93) {\n      effects.enter('taskListCheckMarker');\n      effects.consume(code);\n      effects.exit('taskListCheckMarker');\n      effects.exit('taskListCheck');\n      return effects.check({\n        tokenize: spaceThenNonSpace\n      }, ok, nok);\n    }\n\n    return nok(code);\n  }\n}\n\nfunction spaceThenNonSpace(effects, ok, nok) {\n  var self = this;\n  return spaceFactory(effects, after, 'whitespace');\n\n  function after(code) {\n    return prefixSize(self.events, 'whitespace') && code !== null && !markdownLineEndingOrSpace(code) ? ok(code) : nok(code);\n  }\n}","module.exports = require('./syntax');","var combine = require('micromark/dist/util/combine-extensions');\n\nvar autolink = require('micromark-extension-gfm-autolink-literal');\n\nvar strikethrough = require('micromark-extension-gfm-strikethrough');\n\nvar table = require('micromark-extension-gfm-table');\n\nvar tasklist = require('micromark-extension-gfm-task-list-item');\n\nmodule.exports = create;\n\nfunction create(options) {\n  return combine([autolink, strikethrough(options), table, tasklist]);\n}","'use strict';\n\nvar syntax = require('micromark-extension-gfm');\n\nvar fromMarkdown = require('mdast-util-gfm/from-markdown');\n\nvar toMarkdown = require('mdast-util-gfm/to-markdown');\n\nvar warningIssued;\nmodule.exports = gfm;\n\nfunction gfm(options) {\n  var data = this.data();\n  /* istanbul ignore next - old remark. */\n\n  if (!warningIssued && (this.Parser && this.Parser.prototype && this.Parser.prototype.blockTokenizers || this.Compiler && this.Compiler.prototype && this.Compiler.prototype.visitors)) {\n    warningIssued = true;\n    console.warn('[remark-gfm] Warning: please upgrade to remark 13 to use this plugin');\n  }\n\n  add('micromarkExtensions', syntax(options));\n  add('fromMarkdownExtensions', fromMarkdown);\n  add('toMarkdownExtensions', toMarkdown(options));\n\n  function add(field, value) {\n    /* istanbul ignore if - other extensions. */\n    if (data[field]) data[field].push(value);else data[field] = [value];\n  }\n}","/*!\n * repeat-string <https://github.com/jonschlinkert/repeat-string>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n'use strict';\n/**\n * Results cache\n */\n\nvar res = '';\nvar cache;\n/**\n * Expose `repeat`\n */\n\nmodule.exports = repeat;\n/**\n * Repeat the given `string` the specified `number`\n * of times.\n *\n * **Example:**\n *\n * ```js\n * var repeat = require('repeat-string');\n * repeat('A', 5);\n * //=> AAAAA\n * ```\n *\n * @param {String} `string` The string to repeat\n * @param {Number} `number` The number of times to repeat the string\n * @return {String} Repeated string\n * @api public\n */\n\nfunction repeat(str, num) {\n  if (typeof str !== 'string') {\n    throw new TypeError('expected a string');\n  } // cover common, quick use cases\n\n\n  if (num === 1) return str;\n  if (num === 2) return str + str;\n  var max = str.length * num;\n\n  if (cache !== str || typeof cache === 'undefined') {\n    cache = str;\n    res = '';\n  } else if (res.length >= max) {\n    return res.substr(0, max);\n  }\n\n  while (max > res.length && num > 1) {\n    if (num & 1) {\n      res += str;\n    }\n\n    num >>= 1;\n    str += str;\n  }\n\n  res += str;\n  res = res.substr(0, max);\n  return res;\n}"],"sourceRoot":""}